export let fakeIndex = {
    "data structures": ["CSE 12", "CSE 100"],
    "algorithms": ["CSE 21", "CSE 101"],
    "graph": ["CSE 21", "MATH 154", "CSE 101"],

    "group": ["MATH 100A", "MATH 103A"]
  }


export let fakeCourseResult = [
  {"id": "CSE 12", "name": "Data Structures", "description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. "}, 
  {"id": "CSE 12", "name": "Data Structures", "description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. "}, 
  {"id": "CSE 12", "name": "Data Structures", "description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. "}, 
  {"id": "CSE 12", "name": "Data Structures", "description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. "}, 
  {"id": "CSE 12", "name": "Data Structures", "description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. "}, 
  {"id": "CSE 12", "name": "Data Structures", "description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. "}, 
  {"id": "CSE 12", "name": "Data Structures", "description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. "}, 
  {"id": "CSE 12", "name": "Data Structures", "description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. "}, 
  {"id": "CSE 21", "name": "Mathematics for CS", "description": "Students will explore..."},
  {"id": "CSE 21", "name": "Mathematics for CS", "description": "Students will explore..."},
  {"id": "CSE 110", "name": "Software Engineering", "description": "Introduction to software development and engineering methods, including specification, design, implementation, testing, and process. An emphasis on team development, agile methods, and use of tools such as IDEâ€™s, version control, and test harnesses."},
  ]
